name: Analyze & Test Flutter Code

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - develop
      - master

jobs:
  analyze-test:
    name: Analyze & Test Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour SonarQube

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.29.0
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run code analysis
        run: flutter analyze

      - name: Run Flutter build_runner (if needed)
        run: dart run build_runner build --delete-conflicting-outputs
        continue-on-error: true  # Évite que la CI échoue si build_runner n'est pas utilisé

      - name: Check Dart formatting
        run: dart format --set-exit-if-changed .

      - name: Run tests
        run: flutter test

      - name: Build Flutter project
        run: flutter build apk --debug  # Étape requise pour SonarQube

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # Ajoute si tu as un serveur privé SonarQube